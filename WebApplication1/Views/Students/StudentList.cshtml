@model X.PagedList.IPagedList<WebApplication1.Models.Student>
@using X.PagedList;
@using X.Web.PagedList
<table class="table table-striped">
    <tr>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            First Name
        </th>

        <th>
            @Html.ActionLink("Enrollment Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstMidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>



@{
    var totalPages = Model.PageCount;
    var currentPage = Model.PageNumber;
    var sortOrder = ViewBag.CurrentSort;
    var currentFilter = ViewBag.CurrentFilter;
}

<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("LoadStudents", new { page = currentPage - 1, sortOrder, currentFilter })">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Previous</span>
            </li>
        }

        @for (int i = 1; i <= totalPages; i++)
        {
            if (i == currentPage)
            {
                <li class="page-item active" aria-current="page">
                    <span class="page-link">@i</span>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("LoadStudents", new { page = i, sortOrder, currentFilter })">@i</a>
                </li>
            }
        }

        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("LoadStudents", new { page = currentPage + 1, sortOrder, currentFilter })">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Next</span>
            </li>
        }
    </ul>
</nav>

